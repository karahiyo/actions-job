name: actions-job CI
on:
  push:
    branches: [ "main" ]
    tags:
      - v*
  pull_request:
    branches: [ "*" ]
    paths:
      - 'docker/runner/*'
      - '.github/workflows/actions-job-ci.yaml'

jobs:
  push:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        include:
          - name: actions-job
            os: ubuntu-22.04
            args: |
              RUNNER_UID=1001
              DOCKER_GID=121
          - name: actions-job-dind
            os: ubuntu-20.04
            args: |
              RUNNER_UID=1001
              DOCKER_GID=121
          - name: actions-job-dind
            os: ubuntu-22.04
            args: |
              RUNNER_UID=1001
              DOCKER_GID=121
          - name: actions-job-dind-rootless
            os: ubuntu-20.04
            args: |
              RUNNER_UID=1001
          - name: actions-job-dind-rootless
            os: ubuntu-22.04
            args: |
              RUNNER_UID=1001

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ matrix.name }}
          tags: |
            type=ref,event=branch,prefix=${{ matrix.os }}-
            type=ref,event=pr,prefix=${{ matrix.os }}-
            type=semver,pattern={{version}},prefix=${{ matrix.os }}-
            type=semver,pattern={{major}}.{{minor}},prefix=${{ matrix.os }}-
            type=sha,prefix=${{ matrix.os }}-
            type=raw,value=${{ matrix.os }}
          flavor: |
            latest=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./docker/runner
          file: ./docker/runner/${{ matrix.name }}.${{ matrix.os }}.dockerfile
          build-args: ${{ matrix.args }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
